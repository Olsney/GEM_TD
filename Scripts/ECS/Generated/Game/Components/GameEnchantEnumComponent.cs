//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnchantEnum;

    public static Entitas.IMatcher<GameEntity> EnchantEnum {
        get {
            if (_matcherEnchantEnum == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnchantEnum);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnchantEnum = matcher;
            }

            return _matcherEnchantEnum;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.EnchantEnumComponent enchantEnum { get { return (Game.Battle.EnchantEnumComponent)GetComponent(GameComponentsLookup.EnchantEnum); } }
    public Game.Battle.EnchantEnum EnchantEnum { get { return enchantEnum.Value; } }
    public bool hasEnchantEnum { get { return HasComponent(GameComponentsLookup.EnchantEnum); } }

    public GameEntity AddEnchantEnum(Game.Battle.EnchantEnum newValue) {
        var index = GameComponentsLookup.EnchantEnum;
        var component = (Game.Battle.EnchantEnumComponent)CreateComponent(index, typeof(Game.Battle.EnchantEnumComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnchantEnum(Game.Battle.EnchantEnum newValue) {
        var index = GameComponentsLookup.EnchantEnum;
        var component = (Game.Battle.EnchantEnumComponent)CreateComponent(index, typeof(Game.Battle.EnchantEnumComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnchantEnum() {
        RemoveComponent(GameComponentsLookup.EnchantEnum);
        return this;
    }
}
