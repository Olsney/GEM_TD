//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherEnchantsHolder;

    public static Entitas.IMatcher<GameEntity> EnchantsHolder {
        get {
            if (_matcherEnchantsHolder == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.EnchantsHolder);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherEnchantsHolder = matcher;
            }

            return _matcherEnchantsHolder;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public Game.Battle.EnchantsHolderComponent enchantsHolder { get { return (Game.Battle.EnchantsHolderComponent)GetComponent(GameComponentsLookup.EnchantsHolder); } }
    public Game.Battle.EnchantHolder EnchantsHolder { get { return enchantsHolder.Value; } }
    public bool hasEnchantsHolder { get { return HasComponent(GameComponentsLookup.EnchantsHolder); } }

    public GameEntity AddEnchantsHolder(Game.Battle.EnchantHolder newValue) {
        var index = GameComponentsLookup.EnchantsHolder;
        var component = (Game.Battle.EnchantsHolderComponent)CreateComponent(index, typeof(Game.Battle.EnchantsHolderComponent));
        component.Value = newValue;
        AddComponent(index, component);
        return this;
    }

    public GameEntity ReplaceEnchantsHolder(Game.Battle.EnchantHolder newValue) {
        var index = GameComponentsLookup.EnchantsHolder;
        var component = (Game.Battle.EnchantsHolderComponent)CreateComponent(index, typeof(Game.Battle.EnchantsHolderComponent));
        component.Value = newValue;
        ReplaceComponent(index, component);
        return this;
    }

    public GameEntity RemoveEnchantsHolder() {
        RemoveComponent(GameComponentsLookup.EnchantsHolder);
        return this;
    }
}
