//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentLookupGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using Game.Battle;
using Game.Battle.CleaveAbility.Comps;
using Game.Lifetime;

public static class GameComponentsLookup {

    public const int CurrentHealthPointsListener = 0;
    public const int Abilities = 1;
    public const int AbilityEnum = 2;
    public const int Affected = 3;
    public const int Applied = 4;
    public const int ApplierStatusLink = 5;
    public const int Armament = 6;
    public const int BaseStats = 7;
    public const int BasicAbilityId = 8;
    public const int Cooldown = 9;
    public const int CooldownLeft = 10;
    public const int CooldownUp = 11;
    public const int DamageEffect = 12;
    public const int Direction = 13;
    public const int Duration = 14;
    public const int Effect = 15;
    public const int EffectSetups = 16;
    public const int EffectValue = 17;
    public const int EnchantEnum = 18;
    public const int EnchantsHolder = 19;
    public const int EnchantVisuals = 20;
    public const int ExplosiveEnchant = 21;
    public const int FollowingProducer = 22;
    public const int Freeze = 23;
    public const int GarlicAuraAbility = 24;
    public const int HealEffect = 25;
    public const int HorizontalRotation = 26;
    public const int MovementAvailable = 27;
    public const int MoveSpeed = 28;
    public const int OrbitingMushroomAbility = 29;
    public const int ParentAbility = 30;
    public const int Period = 31;
    public const int Poison = 32;
    public const int PoisonEnchant = 33;
    public const int Processed = 34;
    public const int ProducerId = 35;
    public const int ReadyToApplyEffect = 36;
    public const int RecreatedOnUpgrade = 37;
    public const int Rotation = 38;
    public const int RotationReady = 39;
    public const int RotationSpeed = 40;
    public const int SingleShotAbility = 41;
    public const int SplitshotAbility = 42;
    public const int SplitshotTargets = 43;
    public const int StatChange = 44;
    public const int StatModifiers = 45;
    public const int Status = 46;
    public const int StatusSetups = 47;
    public const int StatusTypeId = 48;
    public const int TargetId = 49;
    public const int TargetLimit = 50;
    public const int TimeLeft = 51;
    public const int TimeSinceLastTick = 52;
    public const int TurnedAlongDirection = 53;
    public const int Unapplied = 54;
    public const int UpgradeRequest = 55;
    public const int VegetableBoltAbility = 56;
    public const int VerticalRotation = 57;
    public const int WorldPosition = 58;
    public const int CameraBounds = 59;
    public const int Camera = 60;
    public const int CameraDrag = 61;
    public const int CameraInput = 62;
    public const int CameraStartPosition = 63;
    public const int CameraTarget = 64;
    public const int CinemachineCamera = 65;
    public const int Ray = 66;
    public const int Active = 67;
    public const int Chosen = 68;
    public const int Destructed = 69;
    public const int EntityLink = 70;
    public const int Id = 71;
    public const int Index = 72;
    public const int Level = 73;
    public const int Prefab = 74;
    public const int Radius = 75;
    public const int SelfDestructTimer = 76;
    public const int StatusVisuals = 77;
    public const int View = 78;
    public const int ViewId = 79;
    public const int Cursor = 80;
    public const int CursorPosition = 81;
    public const int Age = 82;
    public const int Enemy = 83;
    public const int EnemyFrag = 84;
    public const int EnemyFragCreated = 85;
    public const int PathNumber = 86;
    public const int TargetPlaceIndex = 87;
    public const int TargetPointWorldPosition = 88;
    public const int EnemySpawned = 89;
    public const int CleaveAbility = 90;
    public const int ReadyToCleave = 91;
    public const int CleaveArmament = 92;
    public const int CleaveArmamentRadius = 93;
    public const int DecreaseArmor = 94;
    public const int Armor = 95;
    public const int GameLoopStateEnum = 96;
    public const int GameMain = 97;
    public const int TotalGameTime = 98;
    public const int Highlighted = 99;
    public const int Human = 100;
    public const int AxisInput = 101;
    public const int CrouchKey = 102;
    public const int ExitKey = 103;
    public const int InterractKey = 104;
    public const int JumpKey = 105;
    public const int MouseInput = 106;
    public const int SprintKey = 107;
    public const int UserInput = 108;
    public const int InitialInteractDistance = 109;
    public const int InteractableActionName = 110;
    public const int Interactable = 111;
    public const int InteractableName = 112;
    public const int Interacted = 113;
    public const int EnemiesKilled = 114;
    public const int EnemiesPerRound = 115;
    public const int RoundComplete = 116;
    public const int CurrentHealthPoints = 117;
    public const int Dead = 118;
    public const int MaxHealthPoints = 119;
    public const int ProcessingDeath = 120;
    public const int Block = 121;
    public const int CheckPoint = 122;
    public const int DistanceToCenter = 123;
    public const int FinishPoint = 124;
    public const int MazePosition = 125;
    public const int StartPoint = 126;
    public const int Wall = 127;
    public const int Player = 128;
    public const int PlayerId = 129;
    public const int CanRaycast = 130;
    public const int Raycasting = 131;
    public const int ReadyToSwitchState = 132;
    public const int Round = 133;
    public const int RoundTimer = 134;
    public const int SpiritPlaced = 135;
    public const int CollectingTargetsContinuously = 136;
    public const int CollectTargetsInterval = 137;
    public const int CollectTargetsTimer = 138;
    public const int LayerMask = 139;
    public const int ProcessedTargets = 140;
    public const int Reached = 141;
    public const int ReadyToCollectTargets = 142;
    public const int TargetBuffer = 143;
    public const int Timer = 144;
    public const int AttackCooldown = 145;
    public const int AttackRange = 146;
    public const int AttackTimer = 147;
    public const int BasicAttack = 148;
    public const int Dummy = 149;
    public const int RotateAlongEnemyPosition = 150;
    public const int ShootingPointWorldPosition = 151;
    public const int Speed = 152;
    public const int SplitshotAttack = 153;
    public const int Target = 154;
    public const int TowerEnum = 155;
    public const int TowerId = 156;
    public const int TowerSpirit = 157;
    public const int HighlightedListener = 158;
    public const int HighlightedRemovedListener = 159;
    public const int ProcessingDeathRemovedListener = 160;
    public const int RotationListener = 161;
    public const int RoundListener = 162;
    public const int RoundTimerListener = 163;
    public const int TotalGameTimeListener = 164;
    public const int WorldPositionListener = 165;

    public const int TotalComponents = 166;

    public static readonly string[] componentNames = {
        "CurrentHealthPointsListener",
        "Abilities",
        "AbilityEnum",
        "Affected",
        "Applied",
        "ApplierStatusLink",
        "Armament",
        "BaseStats",
        "BasicAbilityId",
        "Cooldown",
        "CooldownLeft",
        "CooldownUp",
        "DamageEffect",
        "Direction",
        "Duration",
        "Effect",
        "EffectSetups",
        "EffectValue",
        "EnchantEnum",
        "EnchantsHolder",
        "EnchantVisuals",
        "ExplosiveEnchant",
        "FollowingProducer",
        "Freeze",
        "GarlicAuraAbility",
        "HealEffect",
        "HorizontalRotation",
        "MovementAvailable",
        "MoveSpeed",
        "OrbitingMushroomAbility",
        "ParentAbility",
        "Period",
        "Poison",
        "PoisonEnchant",
        "Processed",
        "ProducerId",
        "ReadyToApplyEffect",
        "RecreatedOnUpgrade",
        "Rotation",
        "RotationReady",
        "RotationSpeed",
        "SingleShotAbility",
        "SplitshotAbility",
        "SplitshotTargets",
        "StatChange",
        "StatModifiers",
        "Status",
        "StatusSetups",
        "StatusTypeId",
        "TargetId",
        "TargetLimit",
        "TimeLeft",
        "TimeSinceLastTick",
        "TurnedAlongDirection",
        "Unapplied",
        "UpgradeRequest",
        "VegetableBoltAbility",
        "VerticalRotation",
        "WorldPosition",
        "CameraBounds",
        "Camera",
        "CameraDrag",
        "CameraInput",
        "CameraStartPosition",
        "CameraTarget",
        "CinemachineCamera",
        "Ray",
        "Active",
        "Chosen",
        "Destructed",
        "EntityLink",
        "Id",
        "Index",
        "Level",
        "Prefab",
        "Radius",
        "SelfDestructTimer",
        "StatusVisuals",
        "View",
        "ViewId",
        "Cursor",
        "CursorPosition",
        "Age",
        "Enemy",
        "EnemyFrag",
        "EnemyFragCreated",
        "PathNumber",
        "TargetPlaceIndex",
        "TargetPointWorldPosition",
        "EnemySpawned",
        "CleaveAbility",
        "ReadyToCleave",
        "CleaveArmament",
        "CleaveArmamentRadius",
        "DecreaseArmor",
        "Armor",
        "GameLoopStateEnum",
        "GameMain",
        "TotalGameTime",
        "Highlighted",
        "Human",
        "AxisInput",
        "CrouchKey",
        "ExitKey",
        "InterractKey",
        "JumpKey",
        "MouseInput",
        "SprintKey",
        "UserInput",
        "InitialInteractDistance",
        "InteractableActionName",
        "Interactable",
        "InteractableName",
        "Interacted",
        "EnemiesKilled",
        "EnemiesPerRound",
        "RoundComplete",
        "CurrentHealthPoints",
        "Dead",
        "MaxHealthPoints",
        "ProcessingDeath",
        "Block",
        "CheckPoint",
        "DistanceToCenter",
        "FinishPoint",
        "MazePosition",
        "StartPoint",
        "Wall",
        "Player",
        "PlayerId",
        "CanRaycast",
        "Raycasting",
        "ReadyToSwitchState",
        "Round",
        "RoundTimer",
        "SpiritPlaced",
        "CollectingTargetsContinuously",
        "CollectTargetsInterval",
        "CollectTargetsTimer",
        "LayerMask",
        "ProcessedTargets",
        "Reached",
        "ReadyToCollectTargets",
        "TargetBuffer",
        "Timer",
        "AttackCooldown",
        "AttackRange",
        "AttackTimer",
        "BasicAttack",
        "Dummy",
        "RotateAlongEnemyPosition",
        "ShootingPointWorldPosition",
        "Speed",
        "SplitshotAttack",
        "Target",
        "TowerEnum",
        "TowerId",
        "TowerSpirit",
        "HighlightedListener",
        "HighlightedRemovedListener",
        "ProcessingDeathRemovedListener",
        "RotationListener",
        "RoundListener",
        "RoundTimerListener",
        "TotalGameTimeListener",
        "WorldPositionListener"
    };

    public static readonly System.Type[] componentTypes = {
        typeof(CurrentHealthPointsListenerComponent),
        typeof(Game.Battle.AbilitiesComponent),
        typeof(Game.Battle.AbilityEnumComponent),
        typeof(Game.Battle.AffectedComponent),
        typeof(Game.Battle.AppliedComponent),
        typeof(Game.Battle.ApplierStatusLinkComponent),
        typeof(Game.Battle.ArmamentComponent),
        typeof(Game.Battle.BaseStatsComponent),
        typeof(Game.Battle.BasicAbilityIdComponent),
        typeof(Game.Battle.CooldownComponent),
        typeof(Game.Battle.CooldownLeftComponent),
        typeof(Game.Battle.CooldownUpComponent),
        typeof(Game.Battle.DamageEffectComponent),
        typeof(Game.Battle.DirectionComponent),
        typeof(Game.Battle.DurationComponent),
        typeof(Game.Battle.EffectComponent),
        typeof(Game.Battle.EffectSetupsComponent),
        typeof(Game.Battle.EffectValueComponent),
        typeof(Game.Battle.EnchantEnumComponent),
        typeof(Game.Battle.EnchantsHolderComponent),
        typeof(Game.Battle.EnchantVisualsComponent),
        typeof(Game.Battle.ExplosiveEnchantComponent),
        typeof(Game.Battle.FollowingProducerComponent),
        typeof(Game.Battle.FreezeComponent),
        typeof(Game.Battle.GarlicAuraAbilityComponent),
        typeof(Game.Battle.HealEffectComponent),
        typeof(Game.Battle.HorizontalRotationComponent),
        typeof(Game.Battle.MovementAvailable),
        typeof(Game.Battle.MoveSpeedComponent),
        typeof(Game.Battle.OrbitingMushroomAbilityComponent),
        typeof(Game.Battle.ParentAbilityComponent),
        typeof(Game.Battle.PeriodComponent),
        typeof(Game.Battle.PoisonComponent),
        typeof(Game.Battle.PoisonEnchantComponent),
        typeof(Game.Battle.ProcessedComponent),
        typeof(Game.Battle.ProducerIdComponent),
        typeof(Game.Battle.ReadyToApplyEffectComponent),
        typeof(Game.Battle.RecreatedOnUpgradeComponent),
        typeof(Game.Battle.RotationComponent),
        typeof(Game.Battle.RotationReadyComponent),
        typeof(Game.Battle.RotationSpeedComponent),
        typeof(Game.Battle.SingleShotAttack.SingleShotAbilityComponent),
        typeof(Game.Battle.SplitShot.SplitshotAbilityComponent),
        typeof(Game.Battle.SplitShot.SplitshotTargetsComponent),
        typeof(Game.Battle.StatChangeComponent),
        typeof(Game.Battle.StatModifiersComponent),
        typeof(Game.Battle.StatusComponent),
        typeof(Game.Battle.StatusSetupsComponent),
        typeof(Game.Battle.StatusTypeIdComponent),
        typeof(Game.Battle.TargetIdComponent),
        typeof(Game.Battle.TargetLimitComponent),
        typeof(Game.Battle.TimeLeftComponent),
        typeof(Game.Battle.TimeSinceLastTickComponent),
        typeof(Game.Battle.TurnedAlongDirectionComponent),
        typeof(Game.Battle.UnappliedComponent),
        typeof(Game.Battle.UpgradeRequestComponent),
        typeof(Game.Battle.VegetableBoltAbilityComponent),
        typeof(Game.Battle.VerticalRotationComponent),
        typeof(Game.Battle.WorldPositionComponent),
        typeof(Game.Cameras.CameraBounds),
        typeof(Game.Cameras.CameraComponent),
        typeof(Game.Cameras.CameraDragComponent),
        typeof(Game.Cameras.CameraInputComponent),
        typeof(Game.Cameras.CameraStartPositionComponent),
        typeof(Game.Cameras.CameraTargetComponent),
        typeof(Game.Cameras.CinemachineCameraComponent),
        typeof(Game.Cameras.RayComponent),
        typeof(Game.CommonComponents.ActiveComponent),
        typeof(Game.CommonComponents.ChosenComponent),
        typeof(Game.CommonComponents.DestructedComponent),
        typeof(Game.CommonComponents.EntityLinkComponent),
        typeof(Game.CommonComponents.IdComponent),
        typeof(Game.CommonComponents.IndexComponent),
        typeof(Game.CommonComponents.LevelComponent),
        typeof(Game.CommonComponents.PrefabComponent),
        typeof(Game.CommonComponents.RadiusComponent),
        typeof(Game.CommonComponents.SelfDestructTimerComponent),
        typeof(Game.CommonComponents.StatusVisualsComponent),
        typeof(Game.CommonComponents.ViewComponent),
        typeof(Game.CommonComponents.ViewIdComponent),
        typeof(Game.Cursor.CursorComponent),
        typeof(Game.Cursor.CursorPositionComponent),
        typeof(Game.Enemies.AgeComponent),
        typeof(Game.Enemies.EnemyComponent),
        typeof(Game.Enemies.EnemyFragComponent),
        typeof(Game.Enemies.EnemyFragCreatedComponent),
        typeof(Game.Enemies.PathNumberComponent),
        typeof(Game.Enemies.TargetPlaceIndexComponent),
        typeof(Game.Enemies.TargetPointWorldPositionComponent),
        typeof(Game.EnemySpawnedComponent),
        typeof(CleaveAbilityComponent),
        typeof(ReadyToCleaveComponent),
        typeof(CleaveArmamentComponent),
        typeof(CleaveArmamentRadiusComponent),
        typeof(DecreaseArmorComponent),
        typeof(ArmorComponent),
        typeof(Game.GameLoopStateEnumComponent),
        typeof(Game.GameMainFeature.GameMainComponent),
        typeof(Game.GameMainFeature.TotalGameTimeComponent),
        typeof(Game.Highlight.HighlightedComponent),
        typeof(Game.HumanComponent),
        typeof(Game.Inputs.AxisInputComponent),
        typeof(Game.Inputs.CrouchKeyComponent),
        typeof(Game.Inputs.ExitKeyComponent),
        typeof(Game.Inputs.InterractKeyComponent),
        typeof(Game.Inputs.JumpKeyComponent),
        typeof(Game.Inputs.MouseInputComponent),
        typeof(Game.Inputs.SprintKeyComponent),
        typeof(Game.Inputs.UserInputComponent),
        typeof(Game.Interact.InitialInteractDistanceComponent),
        typeof(Game.Interact.InteractableActionNameComponent),
        typeof(Game.Interact.InteractableComponent),
        typeof(Game.Interact.InteractableNameComponent),
        typeof(Game.Interact.InteractedComponent),
        typeof(Game.KillEnemy.EnemiesKilledComponent),
        typeof(Game.KillEnemy.EnemiesPerRoundComponent),
        typeof(Game.KillEnemy.RoundCompleteComponent),
        typeof(Game.Lifetime.CurrentHealthPointsComponent),
        typeof(Game.Lifetime.DeadComponent),
        typeof(Game.Lifetime.MaxHealthPointsComponent),
        typeof(Game.Lifetime.ProcessingDeathComponent),
        typeof(Game.Maze.BlockComponent),
        typeof(Game.Maze.CheckPointComponent),
        typeof(Game.Maze.DistanceToCenterComponent),
        typeof(Game.Maze.FinishPointComponent),
        typeof(Game.Maze.MazePositionComponent),
        typeof(Game.Maze.StartPointComponent),
        typeof(Game.Maze.WallComponent),
        typeof(Game.PlayerComponent),
        typeof(Game.PlayerIdComponent),
        typeof(Game.Raycast.CanRaycastComponent),
        typeof(Game.Raycast.RaycastingComponent),
        typeof(Game.ReadyToSwitchStateComponent),
        typeof(Game.RoundComponent),
        typeof(Game.RoundTimerComponent),
        typeof(Game.SpiritPlacedComponent),
        typeof(Game.TargetCollection.CollectingTargetsContinuouslyComponent),
        typeof(Game.TargetCollection.CollectTargetsIntervalComponent),
        typeof(Game.TargetCollection.CollectTargetsTimerComponent),
        typeof(Game.TargetCollection.LayerMaskComponent),
        typeof(Game.TargetCollection.ProcessedTargetsComponent),
        typeof(Game.TargetCollection.ReachedComponent),
        typeof(Game.TargetCollection.ReadyToCollectTargets),
        typeof(Game.TargetCollection.TargetBufferComponent),
        typeof(Game.Timers.TimerComponent),
        typeof(Game.Towers.AttackCooldownComponent),
        typeof(Game.Towers.AttackRangeComponent),
        typeof(Game.Towers.AttackTimerComponent),
        typeof(Game.Towers.BasicAttackComponent),
        typeof(Game.Towers.DummyComponent),
        typeof(Game.Towers.RotateAlongEnemyPositionComponent),
        typeof(Game.Towers.ShootingPointWorldPositionComponent),
        typeof(Game.Towers.SpeedComponent),
        typeof(Game.Towers.SplitshotAttackComponent),
        typeof(Game.Towers.TargetComponent),
        typeof(Game.Towers.TowerEnumComponent),
        typeof(Game.Towers.TowerIdComponent),
        typeof(Game.Towers.TowerSpiritComponent),
        typeof(HighlightedListenerComponent),
        typeof(HighlightedRemovedListenerComponent),
        typeof(ProcessingDeathRemovedListenerComponent),
        typeof(RotationListenerComponent),
        typeof(RoundListenerComponent),
        typeof(RoundTimerListenerComponent),
        typeof(TotalGameTimeListenerComponent),
        typeof(WorldPositionListenerComponent)
    };
}
